.parent {
  display: grid;
  grid-template-columns: 1fr repeat(2, 4fr) 2fr 1fr;
  grid-template-rows: 2fr 1fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  width: 80%;
  min-width: 1000px;
  aspect-ratio: 3 / 1;
  background: linear-gradient(170deg,
      #999 5%,
      #fff 10%,
      #ccc 30%,
      #ddd 50%,
      #ccc 70%,
      #fff 80%,
      #999 95%);
  box-shadow: -2em 2em 2em 0.5em black;
}

.div1 {
  grid-area: 1 / 1 / 2 / 2;
}

.div2 {
  grid-area: 1 / 2 / 2 / 3;
}

.div3 {
  grid-area: 1 / 3 / 2 / 4;
}

.div4 {
  grid-area: 1 / 4 / 2 / 5;
}

.div5 {
  grid-area: 1 / 5 / 2 / 6;
}

.div6 {
  grid-area: 2 / 1 / 3 / 2;
}

.div7 {
  grid-area: 2 / 2 / 3 / 3;
}

.div8 {
  grid-area: 2 / 3 / 3 / 4;
}

.div9 {
  grid-area: 2 / 4 / 3 / 5;
}

.div10 {
  grid-area: 2 / 5 / 3 / 6;
}



.cassette-area {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.cassette-area>#cassette-casing {
  width: 85%;
  height: 85%;
  align-items: center;
  justify-content: center;
  display: flex;
  box-shadow: 0em 0.2em 0.5em 0em black;
}

.cassette-area>#cassette-casing>#cassette-anim-spot {
  border: 2px solid #666666;
  width: 85%;
  height: 85%;
  border-radius: 2em;
  box-shadow: inset 0em 0em 5em black;
  align-items: center;
  justify-content: center;
  display: flex;
}

.power-area {
  width: 100%;
  height: 100%;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.power-area>#power-text {
  align-self: center;
  padding: 5%;
}

.power-area>#power-button {
  width: 50%;
  height: 50%;
  align-self: center;

}

.play-buttons-flex-container {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.play-buttons-area {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: 1fr;
  grid-column-gap: 3%;
  grid-row-gap: 0px;
  height: 70%;
  width: 85%;
}


.rewind-area {
  grid-area: 1 / 1 / 2 / 2;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.rewind-area>#rewind-text {
  align-self: center;
  padding: 1%;
}

.rewind-area>#rewind-button {
  width: 100%;
  height: 100%;
  align-self: center;
}


.fast-foward-area {
  grid-area: 1 / 2 / 2 / 3;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.fast-foward-area>#fast-foward-text {
  align-self: center;
  padding: 1%;
}

.fast-foward-area>#fast-foward-button {
  width: 100%;
  height: 100%;
  align-self: center;

}


.play-area {
  grid-area: 1 / 4 / 2 / 5;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.play-area>#play-text {
  align-self: center;
  padding: 1%;
}

.play-area>#play-button {
  width: 100%;
  height: 100%;
  align-self: center;

}

.pause-area {
  grid-area: 1 / 5 / 2 / 6;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.pause-area>#pause-text {
  align-self: center;
  padding: 1%;
}

.pause-area>#pause-button {
  width: 100%;
  height: 100%;
  align-self: center;

}

.db-meter-flex-container {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.db-components-flex-container {
  width: 85%;
  height: 85%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.db-meter-area {
  border: 2px solid #666666;
  width: 90%;
  height: 90%;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: 1fr 2fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}



.timer-container {
  grid-area: 1 / 1 / 2 / 2;
  border: 2px solid #666666;
  display: flex;
  justify-content: center;
  align-items: center;
}

.timer-grid {
  display: grid;
  width: 50%;
  height: 50%;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 1fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}

#timer-digit-1 {
  grid-area: 1 / 1 / 2 / 2;
  border: 2px solid #666666;
  text-align: center;
}

#timer-digit-2 {
  grid-area: 1 / 2 / 2 / 3;
  border: 2px solid #666666;
  text-align: center;
}

#timer-digit-3 {
  grid-area: 1 / 3 / 2 / 4;
  border: 2px solid #666666;
  text-align: center;
}

#timer-digit-4 {
  grid-area: 1 / 4 / 2 / 5;
  border: 2px solid #666666;
  text-align: center;
}



.timer-lights-container {
  grid-area: 1 / 2 / 2 / 3;
  border: 2px solid #666666;
  display: flex;
  justify-content: center;
  align-items: center;
}

.timer-lights-grid {
  width: 90%;
  height: 50%;
  display: grid;
  grid-template-columns: 3fr repeat(2, 1fr);
  grid-template-rows: 1fr;
  grid-column-gap: 5%;
  grid-row-gap: 0px;
}

#timer-green-light {
  grid-area: 1 / 2 / 2 / 3;
  border: 2px solid #666666;
  aspect-ratio: 1;
  border-radius: 50%;
  box-shadow: 0em 0em 1em 0em green;
}

#timer-red-light {
  grid-area: 1 / 3 / 2 / 4;
  border: 2px solid #666666;
  aspect-ratio: 1;
  border-radius: 50%;
  box-shadow: 0em 0em 1em 0em red;
}


.db-meter-1 {
  grid-area: 2 / 1 / 3 / 2;
  border: 2px solid #666666;
  justify-content: center;
  align-items: center;
  display: flex;
}

.db-meter-2 {
  grid-area: 2 / 2 / 3 / 3;
  border: 2px solid #666666;
  justify-content: center;
  align-items: center;
  display: flex;
}

.volume-area {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.volume-inner-area {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 3fr;
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  height: 85%;
  width: 85%;
  justify-content: start;
}

#volume-text {
  grid-area: 1 / 1 / 2 / 2;
  text-align: center;
}

#volume-knob {
  grid-area: 2 / 1 / 3 / 2;
  width: 80%;
  height: 80%;
  justify-self: center;
}

#volume-knob-circle {
  border: 2px solid #000000;
  aspect-ratio: 1;
  width: 100%;
  border-radius: 50%;
  background: linear-gradient(#666666, #666666) no-repeat top/2px 40%;
  transition: transform 0.1s ease;
}

.time-left-bar-container {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.time-left-bar-container>#time-left-bar {
  border: 2px solid #666666;
  width: 85%;
  height: 10%;
  border-radius: 100px;
  align-self: center;
}

.time-left-bar-container>#time-left-bar>#time-left-inner-bar {
  width: 100%;
  height: 100%;
  border-radius: 100px;
}

.share-container {
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.share-container>#share-button {
  width: 40%;
  height: 40%;
  justify-content: center;
  align-items: center;
  display: flex;
}


.meter-container {
  position: relative;
  width: 80%;  /* Flexible width */
  max-width: 600px; /* Maximum width for the meter */
  aspect-ratio: 2 / 1;  /* Enforce a 2:1 aspect ratio (width:height) */
  background: white;
  border-top-left-radius: 300px;
  border-top-right-radius: 300px;
  overflow: hidden;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
  border: 2px solid #000; /* Bolder arc border */
}

.needle {
  position: absolute;
  width: 6px;  /* Slightly thicker needle for visibility */
  background: red;
  top: 50%;
  left: 50%;
  transform-origin: bottom center;
  transform: rotate(-90deg); /* Start the needle at -90 degrees (left side) */
  z-index: 2; /* Ensure the needle appears above the arc */
  transition: transform 1s ease-in-out; /* Smooth animation for rotation */
}

/*
<div class="meter-container" id="meter">
      <!-- Needle -->
      <div class="needle" id="needle"></div>

      <script>
        const meter = document.getElementById('meter');
        const needle = document.getElementById('needle');

        // Function to scale the needle based on the meter's size
        function scaleNeedle() {
          // Get the height and width of the meter
          const meterHeight = meter.offsetHeight;
          const meterWidth = meter.offsetWidth;

          // Set the needle height to a value larger than half the meter's height (so it extends beyond the arc)
          const needleHeight = meterHeight / 1.2; // Adjust this factor to make the needle longer

          // Set the height of the needle
          needle.style.height = `${needleHeight}px`;

          // Adjust the needle's top position so it is centered in the meter
          needle.style.top = `calc(50% - ${needleHeight / 2}px)`; // Center needle vertically
        }

        // Function to animate the needle rotation
        function animateNeedle() {
          // Randomly rotate the needle between -90 and 90 degrees (from left to right)
          const randomDegree = Math.random() * 180 - 90;  // Random angle between -90 and 90 degrees

          // Apply the rotation with smooth animation
          needle.style.transform = `rotate(${randomDegree}deg)`;
        }

        // Initially scale the needle
        scaleNeedle();

        // Reposition and scale needle when the meter resizes
        window.addEventListener('resize', scaleNeedle);

        // Animate the needle every 2 seconds
        setInterval(animateNeedle, 2000);
      </script>
    </div>
*/